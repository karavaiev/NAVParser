<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAQAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAgAAAAACAAACAgAAAAACAAIAAgAAAgIAAwMDAAMDcwACmyvAAUCAAAM7BuACjinkAgV5HAFos
        DgBSIwMAcksxAJyBbwDQxLsA9/X0AP79/QC9rKAAmn1rAMOypwDXy8QA1crCAMi6sACbgG4Aj3BcAINh
        SgB8WEAAhmVPAJN1YQCki3oAvKqeANjNxgCRc18A2tHKAJl8agCbf20Ay761ANvRygDn4NwA8u/tAPn4
        9wCehHIAz8K5AKyWhwCIZ1EAi2xXAJ2DcACpkYEAtKCSAKuUhQCokIAApo5+AKuUhACtlYYAqZCBAJd7
        aABkOR0AtqKVAPXy8ADGtqwAr5qLAKKIdwCdgnEAhmZQAP38+wD18/EAe1c/AFQlBgD8+/oAeFM7AGM4
        GwDx7eoAf11FAPb08gCBX0gAvqygAFsuEADu6eYAeVQ8AJFyXgB2UTgAWSsNAO3o5QBWKAoA5t/aAFEh
        AQB3UjkA/Pz7AF4yFQBYKgsA0sa+ANTIwABRIgIA3NLMAFcpCgDJurAAg2JLAHZQNwD+/v4A5uDbAMOz
        qACnj38AcUowAPXy8QBnPiIA3dPNAK2WhwB0TjUA3gAAAMwAAAC4AAAAnwAAAHwAAABYAAAA/+PUAP/H
        sQD/q44A/49rAP9zSAD/ZgAA7lgAANxJAAC5PQAAljEAAHMlAABQGQAA//DUAP/isQD/1I4A/8ZrAP+6
        SAD/sQAA7qMAANySAAC5egAAlmIAAHNKAABQMgAA///UAP//sQD//44A//9rAP//SADu7gAA3t4AAMzM
        AAC2tgAAmJgAAHR0AABISAAA8P/UAOL/sQDU/44Axv9rALj/SACq/wAAn+0AAJLcAAB6uQAAYpYAAEpz
        AAAyUAAA4//UAMf/sQCr/44Aj/9rAHP/SABm/wAAWO4AAEncAAA9uQAAMZYAACVzAAAZTAAA1P/UALH/
        sQCO/44Aa/9rAEj/SAAA7wAAANwAAADJAAAAsAAAAJQAAAB2AAAAUgAA1P/jALH/xwCO/6sAa/+PAEj/
        cwAA/2YAAOtaAADcSQAAuT0AAJYxAABzJQAAUBkA1P/wALH/4gCO/9QAa//GAEj/uAAA/6oAAOqgAADc
        kgAAuXoAAJZiAABzSgAAUDIA1P//ALH//wCO//8Aa///AEj//wAA7u4AAN7eAADMzAAAtrYAAJiYAAB5
        eQAASkoA8vLyAObm5gDa2toAzs7OAMLCwgC2trYAqqqqAJ6engCSkpIAhoaGAHp6egBubm4AYmJiAFZW
        VgBKSkoAPj4+ADIyMgAmJiYAGhoaAA4ODgD/+/AAoKCkAICAgAD/AAAAAP8AAP//AAAAAP8A/wD/AAD/
        /wD///8AR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHEiENDkdH
        R0dHR0dHR0dHR0dHR28RXk1HR0dHR0dHR0dbFRYXGRkoERxkTExMZCAhIiNNW1tbW0dHR0dHR0dHR1Nb
        bRYcFihtZyv2W1tbW1tbW1tbW1tbR0dHR0dHR0dHRy1bWxI4MDEtOD04OCE4ODg7PFtbW1tHR0dHR0dH
        R0dHRz1bW1tNP0BBLUNbW1tbW01SW1tbW0dHR0dHR0dHR0dHRyNbW1tbW1tbUk1bW1tbTVJbW1tbR0dH
        R0dHR0dHR0dHPCtbW1tbW1tMTVtbW1tNUltbW1tHR0dHR0dHR0dHR0dHHVtbW1tbW0xNW1tbW01SW1tb
        W0dHR0dHR0dHR0dHR0dHFVtbW1tbTE1bW1tbTVJbW1tbR0dHR0dHR0dHR0dHR0dQUVtbW1tSFltbW1tN
        UltbW1tHR0dHR0dHR0dHR0dHR0dTW1tbW0kOUVtbW01dWFtbW0dHR0dHR0dHR0dHR0dHR0dtW1tbSUdJ
        W1tbTUdcbVtbR0dHR0dHR0dHR0dHR0dHR0xbW1tJR0dBW1tNR0cOXltHR0dHR0dHR0dHR0dHR0dHRxlb
        W0lHR0dtW01HR0ddKEdHR0dHR0dHR0dHR0dHR0dHZFtbSUdHR1RbTUdHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHZ1tJR0dHRz9NR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0chW0lHR0dHb01HR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR2xbSUdHR0dHSUdHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR21JR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHOElHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dkb0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>